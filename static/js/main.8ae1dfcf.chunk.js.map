{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","newWindow","window","open","opener","handleClick","src","poster_path","backdrop_path","alt","id","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","name","original_name","overview","substring","Nav","show","handleShow","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae1dfcf.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance= axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\n\nexport default instance","import React,{useState,useEffect} from 'react'\nimport instance from './axios'\nimport \"./Row.css\"\n\nconst base_url=\"https://image.tmdb.org/t/p/original/\"\n\nfunction Row({title,fetchUrl,isLargeRow}) {\n    const [movies,setMovies] = useState([])\n    \n\n    useEffect(()=>{\n        async function fetchData(){\n            const request = await instance.get(fetchUrl);\n            setMovies(request.data.results);\n            return request\n        }\n        fetchData();\n    },[fetchUrl])\n\n    console.log(movies)\n\n    \n\n    const handleClick=(movie)=>{\n        const newWindow = window.open(`https://www.youtube.com/watch?v=dQw4w9WgXcQ`, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n                {/*row posters*/}\n                {movies.map(movie =>(\n                    <img\n                        key={movie.id}\n                        onClick={()=>handleClick(movie)}\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                        src={`${base_url}/${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                        alt={movie.title}\n                        ></img>\n                ))}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY=\"bab3dc222c39e3d87c0a6f3152477038\";\n\nconst request={\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\n\nexport default request;","import React,{useState,useEffect} from 'react'\nimport instance from './axios'\nimport request from './requests'\nimport \"./Banner.css\"\n\nfunction Banner() {\n    const [movie,setMovie] = useState([])\n\n    useEffect(()=>{\n        async function fetchData(){\n            const requests= await instance.get(request.fetchNetflixOriginals)\n            setMovie(\n                requests.data.results[\n                    Math.floor(Math.random() * requests.data.results.length -1)\n                ]\n            );\n            return requests;\n        }\n        fetchData()\n    },[])\n    \n    console.log(movie)\n\n    function truncate(str,n) {\n        return str?.length > n ? str.substring(0, n-1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"banner\"\n        style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\"\n        }}\n        >\n             <div className=\"banner_contents\">\n                 \n                <h1 className='banner_title'>\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n\n                <div className=\"banner_btns\">\n                    <button className=\"banner_btn\">Play</button>\n                    <button className=\"banner_btn\">My List</button>\n                </div>\n\n                <h1 className=\"banner_description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n\n            </div>\n            <div className=\"banner-fade-bottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React,{useEffect,useState} from 'react'\nimport \"./Nav.css\"\nfunction Nav() {\n    const [show, handleShow] = useState(false)\n\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\",()=>{\n            if(window.scrollY>100){\n                handleShow(true);\n            }else handleShow(false);\n        });\n        return()=>{\n            window.removeEventListener(\"scroll\");\n        }\n    },[])\n    return (\n        <div className={`nav ${show && \"nav_black\"}`}>\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" \n            alt=\"Netflix\" \n            className=\"nav_logo\"/>\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" \n            alt=\"Avatar\" \n            className=\"nav_avatar\"/>\n        </div>\n    )\n}\n\nexport default Nav\n","import './App.css';\nimport Row from './Row'\nimport request from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix originals\" fetchUrl={request.fetchNetflixOriginals} isLargeRow/>\n      <Row title='Top Rated' fetchUrl={request.fetchTopRated}/>\n      <Row title='Trending Now' fetchUrl={request.fetchTrending}/>\n      <Row title='Action' fetchUrl={request.fetchActionMovies}/>\n      <Row title='Comedy' fetchUrl={request.fetchComedyMovies}/>\n      <Row title='Documentary' fetchUrl={request.fetchDocumentaries}/>\n      <Row title='Horror' fetchUrl={request.fetchHorrorMovies}/>\n      <Row title='Romance' fetchUrl={request.fetchRomanceMovies}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}